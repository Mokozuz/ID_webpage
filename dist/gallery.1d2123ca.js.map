{"mappings":"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","sources":["<anon>","src/js/scgallery.js"],"sourcesContent":["console.clear();\nconst { gsap, imagesLoaded } = window;\nconst buttons = {\n    prev: document.querySelector(\".btn--left\"),\n    next: document.querySelector(\".btn--right\")\n};\nconst cardsContainerEl = document.querySelector(\".cards__wrapper\");\nconst appBgContainerEl = document.querySelector(\".app__bg\");\nconst cardInfosContainerEl = document.querySelector(\".info__wrapper\");\nbuttons.next.addEventListener(\"click\", ()=>swapCards(\"right\"));\nbuttons.prev.addEventListener(\"click\", ()=>swapCards(\"left\"));\nfunction swapCards(direction) {\n    const currentCardEl = cardsContainerEl.querySelector(\".current--card\");\n    const previousCardEl = cardsContainerEl.querySelector(\".previous--card\");\n    const nextCardEl = cardsContainerEl.querySelector(\".next--card\");\n    const currentBgImageEl = appBgContainerEl.querySelector(\".current--image\");\n    const previousBgImageEl = appBgContainerEl.querySelector(\".previous--image\");\n    const nextBgImageEl = appBgContainerEl.querySelector(\".next--image\");\n    changeInfo(direction);\n    swapCardsClass();\n    removeCardEvents(currentCardEl);\n    function swapCardsClass() {\n        currentCardEl.classList.remove(\"current--card\");\n        previousCardEl.classList.remove(\"previous--card\");\n        nextCardEl.classList.remove(\"next--card\");\n        currentBgImageEl.classList.remove(\"current--image\");\n        previousBgImageEl.classList.remove(\"previous--image\");\n        nextBgImageEl.classList.remove(\"next--image\");\n        currentCardEl.style.zIndex = \"50\";\n        currentBgImageEl.style.zIndex = \"-2\";\n        if (direction === \"right\") {\n            previousCardEl.style.zIndex = \"20\";\n            nextCardEl.style.zIndex = \"30\";\n            nextBgImageEl.style.zIndex = \"-1\";\n            currentCardEl.classList.add(\"previous--card\");\n            previousCardEl.classList.add(\"next--card\");\n            nextCardEl.classList.add(\"current--card\");\n            currentBgImageEl.classList.add(\"previous--image\");\n            previousBgImageEl.classList.add(\"next--image\");\n            nextBgImageEl.classList.add(\"current--image\");\n        } else if (direction === \"left\") {\n            previousCardEl.style.zIndex = \"30\";\n            nextCardEl.style.zIndex = \"20\";\n            previousBgImageEl.style.zIndex = \"-1\";\n            currentCardEl.classList.add(\"next--card\");\n            previousCardEl.classList.add(\"current--card\");\n            nextCardEl.classList.add(\"previous--card\");\n            currentBgImageEl.classList.add(\"next--image\");\n            previousBgImageEl.classList.add(\"current--image\");\n            nextBgImageEl.classList.add(\"previous--image\");\n        }\n    }\n}\nfunction changeInfo(direction) {\n    let currentInfoEl = cardInfosContainerEl.querySelector(\".current--info\");\n    let previousInfoEl = cardInfosContainerEl.querySelector(\".previous--info\");\n    let nextInfoEl = cardInfosContainerEl.querySelector(\".next--info\");\n    gsap.timeline().to([\n        buttons.prev,\n        buttons.next\n    ], {\n        duration: 0.2,\n        opacity: 0.5,\n        pointerEvents: \"none\"\n    }).to(currentInfoEl.querySelectorAll(\".text\"), {\n        duration: 0.4,\n        stagger: 0.1,\n        translateY: \"-120px\",\n        opacity: 0\n    }, \"-=\").call(()=>{\n        swapInfosClass(direction);\n    }).call(()=>initCardEvents()).fromTo(direction === \"right\" ? nextInfoEl.querySelectorAll(\".text\") : previousInfoEl.querySelectorAll(\".text\"), {\n        opacity: 0,\n        translateY: \"40px\"\n    }, {\n        duration: 0.4,\n        stagger: 0.1,\n        translateY: \"0px\",\n        opacity: 1\n    }).to([\n        buttons.prev,\n        buttons.next\n    ], {\n        duration: 0.2,\n        opacity: 1,\n        pointerEvents: \"all\"\n    });\n    function swapInfosClass() {\n        currentInfoEl.classList.remove(\"current--info\");\n        previousInfoEl.classList.remove(\"previous--info\");\n        nextInfoEl.classList.remove(\"next--info\");\n        if (direction === \"right\") {\n            currentInfoEl.classList.add(\"previous--info\");\n            nextInfoEl.classList.add(\"current--info\");\n            previousInfoEl.classList.add(\"next--info\");\n        } else if (direction === \"left\") {\n            currentInfoEl.classList.add(\"next--info\");\n            nextInfoEl.classList.add(\"previous--info\");\n            previousInfoEl.classList.add(\"current--info\");\n        }\n    }\n}\nfunction updateCard(e) {\n    const card = e.currentTarget;\n    const box = card.getBoundingClientRect();\n    const centerPosition = {\n        x: box.left + box.width / 2,\n        y: box.top + box.height / 2\n    };\n    let angle = Math.atan2(e.pageX - centerPosition.x, 0) * (35 / Math.PI);\n    gsap.set(card, {\n        \"--current-card-rotation-offset\": `${angle}deg`\n    });\n    const currentInfoEl = cardInfosContainerEl.querySelector(\".current--info\");\n    gsap.set(currentInfoEl, {\n        rotateY: `${angle}deg`\n    });\n}\nfunction resetCardTransforms(e) {\n    const card = e.currentTarget;\n    const currentInfoEl = cardInfosContainerEl.querySelector(\".current--info\");\n    gsap.set(card, {\n        \"--current-card-rotation-offset\": 0\n    });\n    gsap.set(currentInfoEl, {\n        rotateY: 0\n    });\n}\nfunction initCardEvents() {\n    const currentCardEl = cardsContainerEl.querySelector(\".current--card\");\n    currentCardEl.addEventListener(\"pointermove\", updateCard);\n    currentCardEl.addEventListener(\"pointerout\", (e)=>{\n        resetCardTransforms(e);\n    });\n}\ninitCardEvents();\nfunction removeCardEvents(card) {\n    card.removeEventListener(\"pointermove\", updateCard);\n}\nfunction init() {\n    let tl = gsap.timeline();\n    tl.to(cardsContainerEl.children, {\n        delay: 0.15,\n        duration: 0.5,\n        stagger: {\n            ease: \"power4.inOut\",\n            from: \"right\",\n            amount: 0.1\n        },\n        \"--card-translateY-offset\": \"0%\"\n    }).to(cardInfosContainerEl.querySelector(\".current--info\").querySelectorAll(\".text\"), {\n        delay: 0.5,\n        duration: 0.4,\n        stagger: 0.1,\n        opacity: 1,\n        translateY: 0\n    }).to([\n        buttons.prev,\n        buttons.next\n    ], {\n        duration: 0.4,\n        opacity: 1,\n        pointerEvents: \"all\"\n    }, \"-=0.4\");\n}\nconst waitForImages = ()=>{\n    const images = [\n        ...document.querySelectorAll(\"img\")\n    ];\n    const totalImages = images.length;\n    let loadedImages = 0;\n    const loaderEl = document.querySelector(\".loader span\");\n    gsap.set(cardsContainerEl.children, {\n        \"--card-translateY-offset\": \"100vh\"\n    });\n    gsap.set(cardInfosContainerEl.querySelector(\".current--info\").querySelectorAll(\".text\"), {\n        translateY: \"40px\",\n        opacity: 0\n    });\n    gsap.set([\n        buttons.prev,\n        buttons.next\n    ], {\n        pointerEvents: \"none\",\n        opacity: \"0\"\n    });\n    images.forEach((image)=>{\n        imagesLoaded(image, (instance)=>{\n            if (instance.isComplete) {\n                loadedImages++;\n                let loadProgress = loadedImages / totalImages;\n                gsap.to(loaderEl, {\n                    duration: 1,\n                    scaleX: loadProgress,\n                    backgroundColor: `hsl(${loadProgress * 120}, 100%, 50%`\n                });\n                if (totalImages == loadedImages) gsap.timeline().to(\".loading__wrapper\", {\n                    duration: 0.8,\n                    opacity: 0,\n                    pointerEvents: \"none\"\n                }).call(()=>init());\n            }\n        });\n    });\n};\nwaitForImages();\n\n//# sourceMappingURL=gallery.1d2123ca.js.map\n","console.clear();\r\n\r\nconst { gsap, imagesLoaded } = window;\r\n\t\t\r\n\t\tconst buttons = {\r\n\t\t\tprev: document.querySelector(\".btn--left\"),\r\n\t\t\tnext: document.querySelector(\".btn--right\"),\r\n\t\t};\r\n\t\tconst cardsContainerEl = document.querySelector(\".cards__wrapper\");\r\n\t\tconst appBgContainerEl = document.querySelector(\".app__bg\");\r\n\t\t\r\n\t\tconst cardInfosContainerEl = document.querySelector(\".info__wrapper\");\r\n\t\t\r\n\t\tbuttons.next.addEventListener(\"click\", () => swapCards(\"right\"));\r\n\t\t\r\n\t\tbuttons.prev.addEventListener(\"click\", () => swapCards(\"left\"));\r\n\t\t\r\n\t\tfunction swapCards(direction) {\r\n\t\t\tconst currentCardEl = cardsContainerEl.querySelector(\".current--card\");\r\n\t\t\tconst previousCardEl = cardsContainerEl.querySelector(\".previous--card\");\r\n\t\t\tconst nextCardEl = cardsContainerEl.querySelector(\".next--card\");\r\n\t\t\r\n\t\t\tconst currentBgImageEl = appBgContainerEl.querySelector(\".current--image\");\r\n\t\t\tconst previousBgImageEl = appBgContainerEl.querySelector(\".previous--image\");\r\n\t\t\tconst nextBgImageEl = appBgContainerEl.querySelector(\".next--image\");\r\n\t\t\r\n\t\t\tchangeInfo(direction);\r\n\t\t\tswapCardsClass();\r\n\t\t\r\n\t\t\tremoveCardEvents(currentCardEl);\r\n\t\t\r\n\t\t\tfunction swapCardsClass() {\r\n\t\t\t\tcurrentCardEl.classList.remove(\"current--card\");\r\n\t\t\t\tpreviousCardEl.classList.remove(\"previous--card\");\r\n\t\t\t\tnextCardEl.classList.remove(\"next--card\");\r\n\t\t\r\n\t\t\t\tcurrentBgImageEl.classList.remove(\"current--image\");\r\n\t\t\t\tpreviousBgImageEl.classList.remove(\"previous--image\");\r\n\t\t\t\tnextBgImageEl.classList.remove(\"next--image\");\r\n\t\t\r\n\t\t\t\tcurrentCardEl.style.zIndex = \"50\";\r\n\t\t\t\tcurrentBgImageEl.style.zIndex = \"-2\";\r\n\t\t\r\n\t\t\t\tif (direction === \"right\") {\r\n\t\t\t\t\tpreviousCardEl.style.zIndex = \"20\";\r\n\t\t\t\t\tnextCardEl.style.zIndex = \"30\";\r\n\t\t\r\n\t\t\t\t\tnextBgImageEl.style.zIndex = \"-1\";\r\n\t\t\r\n\t\t\t\t\tcurrentCardEl.classList.add(\"previous--card\");\r\n\t\t\t\t\tpreviousCardEl.classList.add(\"next--card\");\r\n\t\t\t\t\tnextCardEl.classList.add(\"current--card\");\r\n\t\t\r\n\t\t\t\t\tcurrentBgImageEl.classList.add(\"previous--image\");\r\n\t\t\t\t\tpreviousBgImageEl.classList.add(\"next--image\");\r\n\t\t\t\t\tnextBgImageEl.classList.add(\"current--image\");\r\n\t\t\t\t} else if (direction === \"left\") {\r\n\t\t\t\t\tpreviousCardEl.style.zIndex = \"30\";\r\n\t\t\t\t\tnextCardEl.style.zIndex = \"20\";\r\n\t\t\r\n\t\t\t\t\tpreviousBgImageEl.style.zIndex = \"-1\";\r\n\t\t\r\n\t\t\t\t\tcurrentCardEl.classList.add(\"next--card\");\r\n\t\t\t\t\tpreviousCardEl.classList.add(\"current--card\");\r\n\t\t\t\t\tnextCardEl.classList.add(\"previous--card\");\r\n\t\t\r\n\t\t\t\t\tcurrentBgImageEl.classList.add(\"next--image\");\r\n\t\t\t\t\tpreviousBgImageEl.classList.add(\"current--image\");\r\n\t\t\t\t\tnextBgImageEl.classList.add(\"previous--image\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction changeInfo(direction) {\r\n\t\t\tlet currentInfoEl = cardInfosContainerEl.querySelector(\".current--info\");\r\n\t\t\tlet previousInfoEl = cardInfosContainerEl.querySelector(\".previous--info\");\r\n\t\t\tlet nextInfoEl = cardInfosContainerEl.querySelector(\".next--info\");\r\n\t\t\r\n\t\t\tgsap.timeline()\r\n\t\t\t\t.to([buttons.prev, buttons.next], {\r\n\t\t\t\tduration: 0.2,\r\n\t\t\t\topacity: 0.5,\r\n\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t})\r\n\t\t\t\t.to(\r\n\t\t\t\tcurrentInfoEl.querySelectorAll(\".text\"),\r\n\t\t\t\t{\r\n\t\t\t\t\tduration: 0.4,\r\n\t\t\t\t\tstagger: 0.1,\r\n\t\t\t\t\ttranslateY: \"-120px\",\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t},\r\n\t\t\t\t\"-=\"\r\n\t\t\t)\r\n\t\t\t\t.call(() => {\r\n\t\t\t\tswapInfosClass(direction);\r\n\t\t\t})\r\n\t\t\t\t.call(() => initCardEvents())\r\n\t\t\t\t.fromTo(\r\n\t\t\t\tdirection === \"right\"\r\n\t\t\t\t? nextInfoEl.querySelectorAll(\".text\")\r\n\t\t\t\t: previousInfoEl.querySelectorAll(\".text\"),\r\n\t\t\t\t{\r\n\t\t\t\t\topacity: 0,\r\n\t\t\t\t\ttranslateY: \"40px\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tduration: 0.4,\r\n\t\t\t\t\tstagger: 0.1,\r\n\t\t\t\t\ttranslateY: \"0px\",\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t\t.to([buttons.prev, buttons.next], {\r\n\t\t\t\tduration: 0.2,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\tpointerEvents: \"all\",\r\n\t\t\t});\r\n\t\t\r\n\t\t\tfunction swapInfosClass() {\r\n\t\t\t\tcurrentInfoEl.classList.remove(\"current--info\");\r\n\t\t\t\tpreviousInfoEl.classList.remove(\"previous--info\");\r\n\t\t\t\tnextInfoEl.classList.remove(\"next--info\");\r\n\t\t\r\n\t\t\t\tif (direction === \"right\") {\r\n\t\t\t\t\tcurrentInfoEl.classList.add(\"previous--info\");\r\n\t\t\t\t\tnextInfoEl.classList.add(\"current--info\");\r\n\t\t\t\t\tpreviousInfoEl.classList.add(\"next--info\");\r\n\t\t\t\t} else if (direction === \"left\") {\r\n\t\t\t\t\tcurrentInfoEl.classList.add(\"next--info\");\r\n\t\t\t\t\tnextInfoEl.classList.add(\"previous--info\");\r\n\t\t\t\t\tpreviousInfoEl.classList.add(\"current--info\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction updateCard(e) {\r\n\t\t\tconst card = e.currentTarget;\r\n\t\t\tconst box = card.getBoundingClientRect();\r\n\t\t\tconst centerPosition = {\r\n\t\t\t\tx: box.left + box.width / 2,\r\n\t\t\t\ty: box.top + box.height / 2,\r\n\t\t\t};\r\n\t\t\tlet angle = Math.atan2(e.pageX - centerPosition.x, 0) * (35 / Math.PI);\r\n\t\t\tgsap.set(card, {\r\n\t\t\t\t\"--current-card-rotation-offset\": `${angle}deg`,\r\n\t\t\t});\r\n\t\t\tconst currentInfoEl = cardInfosContainerEl.querySelector(\".current--info\");\r\n\t\t\tgsap.set(currentInfoEl, {\r\n\t\t\t\trotateY: `${angle}deg`,\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tfunction resetCardTransforms(e) {\r\n\t\t\tconst card = e.currentTarget;\r\n\t\t\tconst currentInfoEl = cardInfosContainerEl.querySelector(\".current--info\");\r\n\t\t\tgsap.set(card, {\r\n\t\t\t\t\"--current-card-rotation-offset\": 0,\r\n\t\t\t});\r\n\t\t\tgsap.set(currentInfoEl, {\r\n\t\t\t\trotateY: 0,\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tfunction initCardEvents() {\r\n\t\t\tconst currentCardEl = cardsContainerEl.querySelector(\".current--card\");\r\n\t\t\tcurrentCardEl.addEventListener(\"pointermove\", updateCard);\r\n\t\t\tcurrentCardEl.addEventListener(\"pointerout\", (e) => {\r\n\t\t\t\tresetCardTransforms(e);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tinitCardEvents();\r\n\t\t\r\n\t\tfunction removeCardEvents(card) {\r\n\t\t\tcard.removeEventListener(\"pointermove\", updateCard);\r\n\t\t}\r\n\t\t\r\n\t\tfunction init() {\r\n\t\t\r\n\t\t\tlet tl = gsap.timeline();\r\n\t\t\r\n\t\t\ttl.to(cardsContainerEl.children, {\r\n\t\t\t\tdelay: 0.15,\r\n\t\t\t\tduration: 0.5,\r\n\t\t\t\tstagger: {\r\n\t\t\t\t\tease: \"power4.inOut\",\r\n\t\t\t\t\tfrom: \"right\",\r\n\t\t\t\t\tamount: 0.1,\r\n\t\t\t\t},\r\n\t\t\t\t\"--card-translateY-offset\": \"0%\",\r\n\t\t\t})\r\n\t\t\t\t.to(cardInfosContainerEl.querySelector(\".current--info\").querySelectorAll(\".text\"), {\r\n\t\t\t\tdelay: 0.5,\r\n\t\t\t\tduration: 0.4,\r\n\t\t\t\tstagger: 0.1,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\ttranslateY: 0,\r\n\t\t\t})\r\n\t\t\t\t.to(\r\n\t\t\t\t[buttons.prev, buttons.next],\r\n\t\t\t\t{\r\n\t\t\t\t\tduration: 0.4,\r\n\t\t\t\t\topacity: 1,\r\n\t\t\t\t\tpointerEvents: \"all\",\r\n\t\t\t\t},\r\n\t\t\t\t\"-=0.4\"\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\tconst waitForImages = () => {\r\n\t\t\tconst images = [...document.querySelectorAll(\"img\")];\r\n\t\t\tconst totalImages = images.length;\r\n\t\t\tlet loadedImages = 0;\r\n\t\t\tconst loaderEl = document.querySelector(\".loader span\");\r\n\t\t\r\n\t\t\tgsap.set(cardsContainerEl.children, {\r\n\t\t\t\t\"--card-translateY-offset\": \"100vh\",\r\n\t\t\t});\r\n\t\t\tgsap.set(cardInfosContainerEl.querySelector(\".current--info\").querySelectorAll(\".text\"), {\r\n\t\t\t\ttranslateY: \"40px\",\r\n\t\t\t\topacity: 0,\r\n\t\t\t});\r\n\t\t\tgsap.set([buttons.prev, buttons.next], {\r\n\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\topacity: \"0\",\r\n\t\t\t});\r\n\t\t\r\n\t\t\timages.forEach((image) => {\r\n\t\t\t\timagesLoaded(image, (instance) => {\r\n\t\t\t\t\tif (instance.isComplete) {\r\n\t\t\t\t\t\tloadedImages++;\r\n\t\t\t\t\t\tlet loadProgress = loadedImages / totalImages;\r\n\t\t\r\n\t\t\t\t\t\tgsap.to(loaderEl, {\r\n\t\t\t\t\t\t\tduration: 1,\r\n\t\t\t\t\t\t\tscaleX: loadProgress,\r\n\t\t\t\t\t\t\tbackgroundColor: `hsl(${loadProgress * 120}, 100%, 50%`,\r\n\t\t\t\t\t\t});\r\n\t\t\r\n\t\t\t\t\t\tif (totalImages == loadedImages) {\r\n\t\t\t\t\t\t\tgsap.timeline()\r\n\t\t\t\t\t\t\t\t.to(\".loading__wrapper\", {\r\n\t\t\t\t\t\t\t\tduration: 0.8,\r\n\t\t\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\t\t\tpointerEvents: \"none\",\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.call(() => init());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\twaitForImages();\r\n\t\t\r\n"],"names":["console","clear","gsap","imagesLoaded","window","buttons","prev","document","querySelector","next","cardsContainerEl","appBgContainerEl","cardInfosContainerEl","swapCards","direction","currentCardEl","previousCardEl","nextCardEl","currentBgImageEl","previousBgImageEl","nextBgImageEl","changeInfo","currentInfoEl","previousInfoEl","nextInfoEl","timeline","to","duration","opacity","pointerEvents","querySelectorAll","stagger","translateY","call","classList","remove","add","initCardEvents","fromTo","style","zIndex","removeCardEvents","card","removeEventListener","updateCard","e","currentTarget","box","getBoundingClientRect","centerPosition","x","left","width","y","top","height","angle","Math","atan2","pageX","PI","set","rotateY","addEventListener","resetCardTransforms","waitForImages","images","totalImages","length","loadedImages","loaderEl","children","forEach","image","instance","isComplete","loadProgress","scaleX","backgroundColor","tl","delay","ease","from","amount"],"version":3,"file":"gallery.1d2123ca.js.map"}